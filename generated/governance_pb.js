// source: governance.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.dac.governance.CastVoteRequest', null, global);
goog.exportSymbol('proto.dac.governance.CategoriesResponse', null, global);
goog.exportSymbol('proto.dac.governance.CategoryStats', null, global);
goog.exportSymbol('proto.dac.governance.CreateCategoryRequest', null, global);
goog.exportSymbol('proto.dac.governance.CreateDelegationRequest', null, global);
goog.exportSymbol('proto.dac.governance.CreateProposalRequest', null, global);
goog.exportSymbol('proto.dac.governance.Delegation', null, global);
goog.exportSymbol('proto.dac.governance.DelegationEdge', null, global);
goog.exportSymbol('proto.dac.governance.DelegationGraph', null, global);
goog.exportSymbol('proto.dac.governance.DelegationNode', null, global);
goog.exportSymbol('proto.dac.governance.DelegationScope', null, global);
goog.exportSymbol('proto.dac.governance.EventType', null, global);
goog.exportSymbol('proto.dac.governance.ExecuteProposalRequest', null, global);
goog.exportSymbol('proto.dac.governance.ExecutionResult', null, global);
goog.exportSymbol('proto.dac.governance.GetDelegationChainRequest', null, global);
goog.exportSymbol('proto.dac.governance.GetDelegationGraphRequest', null, global);
goog.exportSymbol('proto.dac.governance.GetProposalRequest', null, global);
goog.exportSymbol('proto.dac.governance.GetVotingPowerRequest', null, global);
goog.exportSymbol('proto.dac.governance.GetVotingResultsRequest', null, global);
goog.exportSymbol('proto.dac.governance.GovernanceCategory', null, global);
goog.exportSymbol('proto.dac.governance.GovernanceEvent', null, global);
goog.exportSymbol('proto.dac.governance.GovernanceStats', null, global);
goog.exportSymbol('proto.dac.governance.GraphMetrics', null, global);
goog.exportSymbol('proto.dac.governance.ListProposalsRequest', null, global);
goog.exportSymbol('proto.dac.governance.ListProposalsResponse', null, global);
goog.exportSymbol('proto.dac.governance.Proposal', null, global);
goog.exportSymbol('proto.dac.governance.ProposalStatus', null, global);
goog.exportSymbol('proto.dac.governance.ProposalType', null, global);
goog.exportSymbol('proto.dac.governance.StreamEventsRequest', null, global);
goog.exportSymbol('proto.dac.governance.UpdateDelegationRequest', null, global);
goog.exportSymbol('proto.dac.governance.UpdateProposalRequest', null, global);
goog.exportSymbol('proto.dac.governance.User', null, global);
goog.exportSymbol('proto.dac.governance.Vote', null, global);
goog.exportSymbol('proto.dac.governance.VoteOption', null, global);
goog.exportSymbol('proto.dac.governance.VoteResponse', null, global);
goog.exportSymbol('proto.dac.governance.VotingPowerDetails', null, global);
goog.exportSymbol('proto.dac.governance.VotingPowerResponse', null, global);
goog.exportSymbol('proto.dac.governance.VotingUpdate', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.Proposal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.Proposal.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.Proposal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.Proposal.displayName = 'proto.dac.governance.Proposal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.Vote = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.Vote, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.Vote.displayName = 'proto.dac.governance.Vote';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.Delegation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.Delegation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.Delegation.displayName = 'proto.dac.governance.Delegation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.GovernanceCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.GovernanceCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.GovernanceCategory.displayName = 'proto.dac.governance.GovernanceCategory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.User.displayName = 'proto.dac.governance.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.CreateProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.CreateProposalRequest.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.CreateProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.CreateProposalRequest.displayName = 'proto.dac.governance.CreateProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.GetProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.GetProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.GetProposalRequest.displayName = 'proto.dac.governance.GetProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.ListProposalsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.ListProposalsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.ListProposalsRequest.displayName = 'proto.dac.governance.ListProposalsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.ListProposalsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.ListProposalsResponse.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.ListProposalsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.ListProposalsResponse.displayName = 'proto.dac.governance.ListProposalsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.UpdateProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.UpdateProposalRequest.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.UpdateProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.UpdateProposalRequest.displayName = 'proto.dac.governance.UpdateProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.ExecuteProposalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.ExecuteProposalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.ExecuteProposalRequest.displayName = 'proto.dac.governance.ExecuteProposalRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.ExecutionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.ExecutionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.ExecutionResult.displayName = 'proto.dac.governance.ExecutionResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.CastVoteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.CastVoteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.CastVoteRequest.displayName = 'proto.dac.governance.CastVoteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.VoteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.VoteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.VoteResponse.displayName = 'proto.dac.governance.VoteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.GetVotingResultsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.GetVotingResultsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.GetVotingResultsRequest.displayName = 'proto.dac.governance.GetVotingResultsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.VotingUpdate = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.VotingUpdate, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.VotingUpdate.displayName = 'proto.dac.governance.VotingUpdate';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.GetVotingPowerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.GetVotingPowerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.GetVotingPowerRequest.displayName = 'proto.dac.governance.GetVotingPowerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.VotingPowerResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.VotingPowerResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.VotingPowerResponse.displayName = 'proto.dac.governance.VotingPowerResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.VotingPowerDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.VotingPowerDetails.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.VotingPowerDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.VotingPowerDetails.displayName = 'proto.dac.governance.VotingPowerDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.CreateDelegationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.CreateDelegationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.CreateDelegationRequest.displayName = 'proto.dac.governance.CreateDelegationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.UpdateDelegationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.UpdateDelegationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.UpdateDelegationRequest.displayName = 'proto.dac.governance.UpdateDelegationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.GetDelegationChainRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.GetDelegationChainRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.GetDelegationChainRequest.displayName = 'proto.dac.governance.GetDelegationChainRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.DelegationNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.DelegationNode.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.DelegationNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.DelegationNode.displayName = 'proto.dac.governance.DelegationNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.GetDelegationGraphRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.GetDelegationGraphRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.GetDelegationGraphRequest.displayName = 'proto.dac.governance.GetDelegationGraphRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.DelegationGraph = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.DelegationGraph.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.DelegationGraph, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.DelegationGraph.displayName = 'proto.dac.governance.DelegationGraph';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.DelegationEdge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.DelegationEdge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.DelegationEdge.displayName = 'proto.dac.governance.DelegationEdge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.GraphMetrics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.GraphMetrics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.GraphMetrics.displayName = 'proto.dac.governance.GraphMetrics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.CreateCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.CreateCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.CreateCategoryRequest.displayName = 'proto.dac.governance.CreateCategoryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.CategoriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.CategoriesResponse.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.CategoriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.CategoriesResponse.displayName = 'proto.dac.governance.CategoriesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.GovernanceStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.GovernanceStats.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.GovernanceStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.GovernanceStats.displayName = 'proto.dac.governance.GovernanceStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.CategoryStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.CategoryStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.CategoryStats.displayName = 'proto.dac.governance.CategoryStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.StreamEventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dac.governance.StreamEventsRequest.repeatedFields_, null);
};
goog.inherits(proto.dac.governance.StreamEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.StreamEventsRequest.displayName = 'proto.dac.governance.StreamEventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dac.governance.GovernanceEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dac.governance.GovernanceEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.dac.governance.GovernanceEvent.displayName = 'proto.dac.governance.GovernanceEvent';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.Proposal.repeatedFields_ = [17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.Proposal.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.Proposal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.Proposal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.Proposal.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    type: jspb.Message.getFieldWithDefault(msg, 5, 0),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 7, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 8, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    votingStartsAt: (f = msg.getVotingStartsAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    votingEndsAt: (f = msg.getVotingEndsAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    votingThreshold: jspb.Message.getFieldWithDefault(msg, 12, ""),
    quorumRequired: jspb.Message.getFieldWithDefault(msg, 13, ""),
    votesFor: jspb.Message.getFieldWithDefault(msg, 14, 0),
    votesAgainst: jspb.Message.getFieldWithDefault(msg, 15, 0),
    votesAbstain: jspb.Message.getFieldWithDefault(msg, 16, 0),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    metadata: jspb.Message.getFieldWithDefault(msg, 18, ""),
    usesQuadraticVoting: jspb.Message.getBooleanFieldWithDefault(msg, 19, false),
    category: (f = msg.getCategory()) && proto.dac.governance.GovernanceCategory.toObject(includeInstance, f),
    creator: (f = msg.getCreator()) && proto.dac.governance.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.Proposal}
 */
proto.dac.governance.Proposal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.Proposal;
  return proto.dac.governance.Proposal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.Proposal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.Proposal}
 */
proto.dac.governance.Proposal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {!proto.dac.governance.ProposalType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {!proto.dac.governance.ProposalStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreatedBy(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setVotingStartsAt(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setVotingEndsAt(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setVotingThreshold(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuorumRequired(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVotesFor(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVotesAgainst(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVotesAbstain(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsesQuadraticVoting(value);
      break;
    case 20:
      var value = new proto.dac.governance.GovernanceCategory;
      reader.readMessage(value,proto.dac.governance.GovernanceCategory.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    case 21:
      var value = new proto.dac.governance.User;
      reader.readMessage(value,proto.dac.governance.User.deserializeBinaryFromReader);
      msg.setCreator(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.Proposal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.Proposal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.Proposal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.Proposal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getCreatedBy();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getVotingStartsAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getVotingEndsAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getVotingThreshold();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getQuorumRequired();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getVotesFor();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getVotesAgainst();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getVotesAbstain();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getUsesQuadraticVoting();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.dac.governance.GovernanceCategory.serializeBinaryToWriter
    );
  }
  f = message.getCreator();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.dac.governance.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dac.governance.Proposal.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.dac.governance.Proposal.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.dac.governance.Proposal.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.dac.governance.Proposal.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ProposalType type = 5;
 * @return {!proto.dac.governance.ProposalType}
 */
proto.dac.governance.Proposal.prototype.getType = function() {
  return /** @type {!proto.dac.governance.ProposalType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.dac.governance.ProposalType} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional ProposalStatus status = 6;
 * @return {!proto.dac.governance.ProposalStatus}
 */
proto.dac.governance.Proposal.prototype.getStatus = function() {
  return /** @type {!proto.dac.governance.ProposalStatus} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.dac.governance.ProposalStatus} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional int32 category_id = 7;
 * @return {number}
 */
proto.dac.governance.Proposal.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setCategoryId = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 created_by = 8;
 * @return {number}
 */
proto.dac.governance.Proposal.prototype.getCreatedBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.Proposal.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.Proposal} returns this
*/
proto.dac.governance.Proposal.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Proposal.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp voting_starts_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.Proposal.prototype.getVotingStartsAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.Proposal} returns this
*/
proto.dac.governance.Proposal.prototype.setVotingStartsAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.clearVotingStartsAt = function() {
  return this.setVotingStartsAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Proposal.prototype.hasVotingStartsAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp voting_ends_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.Proposal.prototype.getVotingEndsAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.Proposal} returns this
*/
proto.dac.governance.Proposal.prototype.setVotingEndsAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.clearVotingEndsAt = function() {
  return this.setVotingEndsAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Proposal.prototype.hasVotingEndsAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string voting_threshold = 12;
 * @return {string}
 */
proto.dac.governance.Proposal.prototype.getVotingThreshold = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setVotingThreshold = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string quorum_required = 13;
 * @return {string}
 */
proto.dac.governance.Proposal.prototype.getQuorumRequired = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setQuorumRequired = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int64 votes_for = 14;
 * @return {number}
 */
proto.dac.governance.Proposal.prototype.getVotesFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setVotesFor = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 votes_against = 15;
 * @return {number}
 */
proto.dac.governance.Proposal.prototype.getVotesAgainst = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setVotesAgainst = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 votes_abstain = 16;
 * @return {number}
 */
proto.dac.governance.Proposal.prototype.getVotesAbstain = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setVotesAbstain = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * repeated string tags = 17;
 * @return {!Array<string>}
 */
proto.dac.governance.Proposal.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string metadata = 18;
 * @return {string}
 */
proto.dac.governance.Proposal.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional bool uses_quadratic_voting = 19;
 * @return {boolean}
 */
proto.dac.governance.Proposal.prototype.getUsesQuadraticVoting = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 19, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.setUsesQuadraticVoting = function(value) {
  return jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional GovernanceCategory category = 20;
 * @return {?proto.dac.governance.GovernanceCategory}
 */
proto.dac.governance.Proposal.prototype.getCategory = function() {
  return /** @type{?proto.dac.governance.GovernanceCategory} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.GovernanceCategory, 20));
};


/**
 * @param {?proto.dac.governance.GovernanceCategory|undefined} value
 * @return {!proto.dac.governance.Proposal} returns this
*/
proto.dac.governance.Proposal.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Proposal.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional User creator = 21;
 * @return {?proto.dac.governance.User}
 */
proto.dac.governance.Proposal.prototype.getCreator = function() {
  return /** @type{?proto.dac.governance.User} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.User, 21));
};


/**
 * @param {?proto.dac.governance.User|undefined} value
 * @return {!proto.dac.governance.Proposal} returns this
*/
proto.dac.governance.Proposal.prototype.setCreator = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Proposal} returns this
 */
proto.dac.governance.Proposal.prototype.clearCreator = function() {
  return this.setCreator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Proposal.prototype.hasCreator = function() {
  return jspb.Message.getField(this, 21) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.Vote.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.Vote.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.Vote} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.Vote.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    voteOption: jspb.Message.getFieldWithDefault(msg, 4, 0),
    votePower: jspb.Message.getFieldWithDefault(msg, 5, ""),
    reasoning: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isDelegated: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    delegatedFrom: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.Vote}
 */
proto.dac.governance.Vote.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.Vote;
  return proto.dac.governance.Vote.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.Vote} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.Vote}
 */
proto.dac.governance.Vote.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {!proto.dac.governance.VoteOption} */ (reader.readEnum());
      msg.setVoteOption(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVotePower(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReasoning(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDelegated(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDelegatedFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.Vote.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.Vote.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.Vote} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.Vote.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getVoteOption();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getVotePower();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReasoning();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsDelegated();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getDelegatedFrom();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dac.governance.Vote.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Vote} returns this
 */
proto.dac.governance.Vote.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 proposal_id = 2;
 * @return {number}
 */
proto.dac.governance.Vote.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Vote} returns this
 */
proto.dac.governance.Vote.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 user_id = 3;
 * @return {number}
 */
proto.dac.governance.Vote.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Vote} returns this
 */
proto.dac.governance.Vote.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional VoteOption vote_option = 4;
 * @return {!proto.dac.governance.VoteOption}
 */
proto.dac.governance.Vote.prototype.getVoteOption = function() {
  return /** @type {!proto.dac.governance.VoteOption} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.dac.governance.VoteOption} value
 * @return {!proto.dac.governance.Vote} returns this
 */
proto.dac.governance.Vote.prototype.setVoteOption = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string vote_power = 5;
 * @return {string}
 */
proto.dac.governance.Vote.prototype.getVotePower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.Vote} returns this
 */
proto.dac.governance.Vote.prototype.setVotePower = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string reasoning = 6;
 * @return {string}
 */
proto.dac.governance.Vote.prototype.getReasoning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.Vote} returns this
 */
proto.dac.governance.Vote.prototype.setReasoning = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.Vote.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.Vote} returns this
*/
proto.dac.governance.Vote.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Vote} returns this
 */
proto.dac.governance.Vote.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Vote.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool is_delegated = 8;
 * @return {boolean}
 */
proto.dac.governance.Vote.prototype.getIsDelegated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.Vote} returns this
 */
proto.dac.governance.Vote.prototype.setIsDelegated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional int32 delegated_from = 9;
 * @return {number}
 */
proto.dac.governance.Vote.prototype.getDelegatedFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Vote} returns this
 */
proto.dac.governance.Vote.prototype.setDelegatedFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.Delegation.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.Delegation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.Delegation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.Delegation.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    delegatorId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    delegateId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    scope: jspb.Message.getFieldWithDefault(msg, 4, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    proposalId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    transferable: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    delegator: (f = msg.getDelegator()) && proto.dac.governance.User.toObject(includeInstance, f),
    delegate: (f = msg.getDelegate()) && proto.dac.governance.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.Delegation}
 */
proto.dac.governance.Delegation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.Delegation;
  return proto.dac.governance.Delegation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.Delegation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.Delegation}
 */
proto.dac.governance.Delegation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDelegatorId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDelegateId(value);
      break;
    case 4:
      var value = /** @type {!proto.dac.governance.DelegationScope} */ (reader.readEnum());
      msg.setScope(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferable(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 11:
      var value = new proto.dac.governance.User;
      reader.readMessage(value,proto.dac.governance.User.deserializeBinaryFromReader);
      msg.setDelegator(value);
      break;
    case 12:
      var value = new proto.dac.governance.User;
      reader.readMessage(value,proto.dac.governance.User.deserializeBinaryFromReader);
      msg.setDelegate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.Delegation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.Delegation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.Delegation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.Delegation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDelegatorId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDelegateId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getScope();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getTransferable();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDelegator();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.dac.governance.User.serializeBinaryToWriter
    );
  }
  f = message.getDelegate();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.dac.governance.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dac.governance.Delegation.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 delegator_id = 2;
 * @return {number}
 */
proto.dac.governance.Delegation.prototype.getDelegatorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.setDelegatorId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 delegate_id = 3;
 * @return {number}
 */
proto.dac.governance.Delegation.prototype.getDelegateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.setDelegateId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional DelegationScope scope = 4;
 * @return {!proto.dac.governance.DelegationScope}
 */
proto.dac.governance.Delegation.prototype.getScope = function() {
  return /** @type {!proto.dac.governance.DelegationScope} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.dac.governance.DelegationScope} value
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.setScope = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int32 category_id = 5;
 * @return {number}
 */
proto.dac.governance.Delegation.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.setCategoryId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.clearCategoryId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Delegation.prototype.hasCategoryId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int32 proposal_id = 6;
 * @return {number}
 */
proto.dac.governance.Delegation.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.setProposalId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.clearProposalId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Delegation.prototype.hasProposalId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool active = 7;
 * @return {boolean}
 */
proto.dac.governance.Delegation.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool transferable = 8;
 * @return {boolean}
 */
proto.dac.governance.Delegation.prototype.getTransferable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.setTransferable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.Delegation.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.Delegation} returns this
*/
proto.dac.governance.Delegation.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Delegation.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Timestamp expires_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.Delegation.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.Delegation} returns this
*/
proto.dac.governance.Delegation.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Delegation.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional User delegator = 11;
 * @return {?proto.dac.governance.User}
 */
proto.dac.governance.Delegation.prototype.getDelegator = function() {
  return /** @type{?proto.dac.governance.User} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.User, 11));
};


/**
 * @param {?proto.dac.governance.User|undefined} value
 * @return {!proto.dac.governance.Delegation} returns this
*/
proto.dac.governance.Delegation.prototype.setDelegator = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.clearDelegator = function() {
  return this.setDelegator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Delegation.prototype.hasDelegator = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional User delegate = 12;
 * @return {?proto.dac.governance.User}
 */
proto.dac.governance.Delegation.prototype.getDelegate = function() {
  return /** @type{?proto.dac.governance.User} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.User, 12));
};


/**
 * @param {?proto.dac.governance.User|undefined} value
 * @return {!proto.dac.governance.Delegation} returns this
*/
proto.dac.governance.Delegation.prototype.setDelegate = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.Delegation} returns this
 */
proto.dac.governance.Delegation.prototype.clearDelegate = function() {
  return this.setDelegate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.Delegation.prototype.hasDelegate = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.GovernanceCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.GovernanceCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.GovernanceCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GovernanceCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    color: jspb.Message.getFieldWithDefault(msg, 4, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 5, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    proposalCount: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.GovernanceCategory}
 */
proto.dac.governance.GovernanceCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.GovernanceCategory;
  return proto.dac.governance.GovernanceCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.GovernanceCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.GovernanceCategory}
 */
proto.dac.governance.GovernanceCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.GovernanceCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.GovernanceCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.GovernanceCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GovernanceCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getProposalCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dac.governance.GovernanceCategory.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceCategory} returns this
 */
proto.dac.governance.GovernanceCategory.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.dac.governance.GovernanceCategory.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.GovernanceCategory} returns this
 */
proto.dac.governance.GovernanceCategory.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.dac.governance.GovernanceCategory.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.GovernanceCategory} returns this
 */
proto.dac.governance.GovernanceCategory.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string color = 4;
 * @return {string}
 */
proto.dac.governance.GovernanceCategory.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.GovernanceCategory} returns this
 */
proto.dac.governance.GovernanceCategory.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string icon = 5;
 * @return {string}
 */
proto.dac.governance.GovernanceCategory.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.GovernanceCategory} returns this
 */
proto.dac.governance.GovernanceCategory.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool active = 6;
 * @return {boolean}
 */
proto.dac.governance.GovernanceCategory.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.GovernanceCategory} returns this
 */
proto.dac.governance.GovernanceCategory.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional int32 proposal_count = 7;
 * @return {number}
 */
proto.dac.governance.GovernanceCategory.prototype.getProposalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceCategory} returns this
 */
proto.dac.governance.GovernanceCategory.prototype.setProposalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.User.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, ""),
    membershipTier: jspb.Message.getFieldWithDefault(msg, 5, ""),
    walletAddress: jspb.Message.getFieldWithDefault(msg, 6, ""),
    dacTokenBalance: jspb.Message.getFieldWithDefault(msg, 7, ""),
    promTokenBalance: jspb.Message.getFieldWithDefault(msg, 8, ""),
    avatarUrl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    reputationScore: jspb.Message.getFieldWithDefault(msg, 10, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.User}
 */
proto.dac.governance.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.User;
  return proto.dac.governance.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.User}
 */
proto.dac.governance.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMembershipTier(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setWalletAddress(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDacTokenBalance(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromTokenBalance(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvatarUrl(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReputationScore(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMembershipTier();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getWalletAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDacTokenBalance();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPromTokenBalance();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getReputationScore();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dac.governance.User.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.dac.governance.User.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dac.governance.User.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.dac.governance.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string membership_tier = 5;
 * @return {string}
 */
proto.dac.governance.User.prototype.getMembershipTier = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setMembershipTier = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string wallet_address = 6;
 * @return {string}
 */
proto.dac.governance.User.prototype.getWalletAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setWalletAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string dac_token_balance = 7;
 * @return {string}
 */
proto.dac.governance.User.prototype.getDacTokenBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setDacTokenBalance = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string prom_token_balance = 8;
 * @return {string}
 */
proto.dac.governance.User.prototype.getPromTokenBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setPromTokenBalance = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string avatar_url = 9;
 * @return {string}
 */
proto.dac.governance.User.prototype.getAvatarUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setAvatarUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 reputation_score = 10;
 * @return {number}
 */
proto.dac.governance.User.prototype.getReputationScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.User} returns this
 */
proto.dac.governance.User.prototype.setReputationScore = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.CreateProposalRequest.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.CreateProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.CreateProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.CreateProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CreateProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    content: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 6, 0),
    votingStartsAt: (f = msg.getVotingStartsAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    votingEndsAt: (f = msg.getVotingEndsAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    votingThreshold: jspb.Message.getFieldWithDefault(msg, 9, ""),
    quorumRequired: jspb.Message.getFieldWithDefault(msg, 10, ""),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    metadata: jspb.Message.getFieldWithDefault(msg, 12, ""),
    usesQuadraticVoting: jspb.Message.getBooleanFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.CreateProposalRequest}
 */
proto.dac.governance.CreateProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.CreateProposalRequest;
  return proto.dac.governance.CreateProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.CreateProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.CreateProposalRequest}
 */
proto.dac.governance.CreateProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 4:
      var value = /** @type {!proto.dac.governance.ProposalType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreatedBy(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setVotingStartsAt(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setVotingEndsAt(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setVotingThreshold(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuorumRequired(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsesQuadraticVoting(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.CreateProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.CreateProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.CreateProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CreateProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getCategoryId();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getCreatedBy();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getVotingStartsAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getVotingEndsAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getVotingThreshold();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getQuorumRequired();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getMetadata();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getUsesQuadraticVoting();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.dac.governance.CreateProposalRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.dac.governance.CreateProposalRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string content = 3;
 * @return {string}
 */
proto.dac.governance.CreateProposalRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setContent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ProposalType type = 4;
 * @return {!proto.dac.governance.ProposalType}
 */
proto.dac.governance.CreateProposalRequest.prototype.getType = function() {
  return /** @type {!proto.dac.governance.ProposalType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.dac.governance.ProposalType} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int32 category_id = 5;
 * @return {number}
 */
proto.dac.governance.CreateProposalRequest.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setCategoryId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 created_by = 6;
 * @return {number}
 */
proto.dac.governance.CreateProposalRequest.prototype.getCreatedBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp voting_starts_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.CreateProposalRequest.prototype.getVotingStartsAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
*/
proto.dac.governance.CreateProposalRequest.prototype.setVotingStartsAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.clearVotingStartsAt = function() {
  return this.setVotingStartsAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.CreateProposalRequest.prototype.hasVotingStartsAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp voting_ends_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.CreateProposalRequest.prototype.getVotingEndsAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
*/
proto.dac.governance.CreateProposalRequest.prototype.setVotingEndsAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.clearVotingEndsAt = function() {
  return this.setVotingEndsAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.CreateProposalRequest.prototype.hasVotingEndsAt = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string voting_threshold = 9;
 * @return {string}
 */
proto.dac.governance.CreateProposalRequest.prototype.getVotingThreshold = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setVotingThreshold = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string quorum_required = 10;
 * @return {string}
 */
proto.dac.governance.CreateProposalRequest.prototype.getQuorumRequired = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setQuorumRequired = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string tags = 11;
 * @return {!Array<string>}
 */
proto.dac.governance.CreateProposalRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string metadata = 12;
 * @return {string}
 */
proto.dac.governance.CreateProposalRequest.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setMetadata = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool uses_quadratic_voting = 13;
 * @return {boolean}
 */
proto.dac.governance.CreateProposalRequest.prototype.getUsesQuadraticVoting = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.CreateProposalRequest} returns this
 */
proto.dac.governance.CreateProposalRequest.prototype.setUsesQuadraticVoting = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.GetProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.GetProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.GetProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.GetProposalRequest}
 */
proto.dac.governance.GetProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.GetProposalRequest;
  return proto.dac.governance.GetProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.GetProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.GetProposalRequest}
 */
proto.dac.governance.GetProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.GetProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.GetProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.GetProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dac.governance.GetProposalRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetProposalRequest} returns this
 */
proto.dac.governance.GetProposalRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.ListProposalsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.ListProposalsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.ListProposalsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.ListProposalsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    categoryId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    createdBy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    page: jspb.Message.getFieldWithDefault(msg, 4, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 5, 0),
    sortBy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sortOrder: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.ListProposalsRequest}
 */
proto.dac.governance.ListProposalsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.ListProposalsRequest;
  return proto.dac.governance.ListProposalsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.ListProposalsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.ListProposalsRequest}
 */
proto.dac.governance.ListProposalsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCreatedBy(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortBy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSortOrder(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.ListProposalsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.ListProposalsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.ListProposalsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.ListProposalsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getSortBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSortOrder();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.dac.governance.ListProposalsRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.ListProposalsRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 category_id = 2;
 * @return {number}
 */
proto.dac.governance.ListProposalsRequest.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.setCategoryId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.clearCategoryId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.ListProposalsRequest.prototype.hasCategoryId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 created_by = 3;
 * @return {number}
 */
proto.dac.governance.ListProposalsRequest.prototype.getCreatedBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.setCreatedBy = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.clearCreatedBy = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.ListProposalsRequest.prototype.hasCreatedBy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 page = 4;
 * @return {number}
 */
proto.dac.governance.ListProposalsRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 limit = 5;
 * @return {number}
 */
proto.dac.governance.ListProposalsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string sort_by = 6;
 * @return {string}
 */
proto.dac.governance.ListProposalsRequest.prototype.getSortBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.setSortBy = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string sort_order = 7;
 * @return {string}
 */
proto.dac.governance.ListProposalsRequest.prototype.getSortOrder = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.ListProposalsRequest} returns this
 */
proto.dac.governance.ListProposalsRequest.prototype.setSortOrder = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.ListProposalsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.ListProposalsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.ListProposalsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.ListProposalsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.ListProposalsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalsList: jspb.Message.toObjectList(msg.getProposalsList(),
    proto.dac.governance.Proposal.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    page: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    hasNext: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.ListProposalsResponse}
 */
proto.dac.governance.ListProposalsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.ListProposalsResponse;
  return proto.dac.governance.ListProposalsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.ListProposalsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.ListProposalsResponse}
 */
proto.dac.governance.ListProposalsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dac.governance.Proposal;
      reader.readMessage(value,proto.dac.governance.Proposal.deserializeBinaryFromReader);
      msg.addProposals(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasNext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.ListProposalsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.ListProposalsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.ListProposalsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.ListProposalsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposalsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dac.governance.Proposal.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getHasNext();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * repeated Proposal proposals = 1;
 * @return {!Array<!proto.dac.governance.Proposal>}
 */
proto.dac.governance.ListProposalsResponse.prototype.getProposalsList = function() {
  return /** @type{!Array<!proto.dac.governance.Proposal>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dac.governance.Proposal, 1));
};


/**
 * @param {!Array<!proto.dac.governance.Proposal>} value
 * @return {!proto.dac.governance.ListProposalsResponse} returns this
*/
proto.dac.governance.ListProposalsResponse.prototype.setProposalsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.dac.governance.Proposal=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.Proposal}
 */
proto.dac.governance.ListProposalsResponse.prototype.addProposals = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dac.governance.Proposal, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.ListProposalsResponse} returns this
 */
proto.dac.governance.ListProposalsResponse.prototype.clearProposalsList = function() {
  return this.setProposalsList([]);
};


/**
 * optional int32 total_count = 2;
 * @return {number}
 */
proto.dac.governance.ListProposalsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.ListProposalsResponse} returns this
 */
proto.dac.governance.ListProposalsResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 page = 3;
 * @return {number}
 */
proto.dac.governance.ListProposalsResponse.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.ListProposalsResponse} returns this
 */
proto.dac.governance.ListProposalsResponse.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 limit = 4;
 * @return {number}
 */
proto.dac.governance.ListProposalsResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.ListProposalsResponse} returns this
 */
proto.dac.governance.ListProposalsResponse.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool has_next = 5;
 * @return {boolean}
 */
proto.dac.governance.ListProposalsResponse.prototype.getHasNext = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.ListProposalsResponse} returns this
 */
proto.dac.governance.ListProposalsResponse.prototype.setHasNext = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.UpdateProposalRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.UpdateProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.UpdateProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.UpdateProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.UpdateProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    metadata: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.UpdateProposalRequest}
 */
proto.dac.governance.UpdateProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.UpdateProposalRequest;
  return proto.dac.governance.UpdateProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.UpdateProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.UpdateProposalRequest}
 */
proto.dac.governance.UpdateProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = /** @type {!proto.dac.governance.ProposalStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addTags(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.UpdateProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.UpdateProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.UpdateProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.UpdateProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!proto.dac.governance.ProposalStatus} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dac.governance.UpdateProposalRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.dac.governance.UpdateProposalRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.setTitle = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.clearTitle = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.UpdateProposalRequest.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.dac.governance.UpdateProposalRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.setDescription = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.clearDescription = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.UpdateProposalRequest.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string content = 4;
 * @return {string}
 */
proto.dac.governance.UpdateProposalRequest.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.setContent = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.clearContent = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.UpdateProposalRequest.prototype.hasContent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProposalStatus status = 5;
 * @return {!proto.dac.governance.ProposalStatus}
 */
proto.dac.governance.UpdateProposalRequest.prototype.getStatus = function() {
  return /** @type {!proto.dac.governance.ProposalStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.dac.governance.ProposalStatus} value
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.setStatus = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.clearStatus = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.UpdateProposalRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string tags = 6;
 * @return {!Array<string>}
 */
proto.dac.governance.UpdateProposalRequest.prototype.getTagsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional string metadata = 7;
 * @return {string}
 */
proto.dac.governance.UpdateProposalRequest.prototype.getMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.setMetadata = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.UpdateProposalRequest} returns this
 */
proto.dac.governance.UpdateProposalRequest.prototype.clearMetadata = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.UpdateProposalRequest.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.ExecuteProposalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.ExecuteProposalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.ExecuteProposalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.ExecuteProposalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    executedBy: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.ExecuteProposalRequest}
 */
proto.dac.governance.ExecuteProposalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.ExecuteProposalRequest;
  return proto.dac.governance.ExecuteProposalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.ExecuteProposalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.ExecuteProposalRequest}
 */
proto.dac.governance.ExecuteProposalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExecutedBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.ExecuteProposalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.ExecuteProposalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.ExecuteProposalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.ExecuteProposalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getExecutedBy();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dac.governance.ExecuteProposalRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.ExecuteProposalRequest} returns this
 */
proto.dac.governance.ExecuteProposalRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 executed_by = 2;
 * @return {number}
 */
proto.dac.governance.ExecuteProposalRequest.prototype.getExecutedBy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.ExecuteProposalRequest} returns this
 */
proto.dac.governance.ExecuteProposalRequest.prototype.setExecutedBy = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.ExecutionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.ExecutionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.ExecutionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.ExecutionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    transactionHash: jspb.Message.getFieldWithDefault(msg, 3, ""),
    executedAt: (f = msg.getExecutedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.ExecutionResult}
 */
proto.dac.governance.ExecutionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.ExecutionResult;
  return proto.dac.governance.ExecutionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.ExecutionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.ExecutionResult}
 */
proto.dac.governance.ExecutionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionHash(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExecutedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.ExecutionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.ExecutionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.ExecutionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.ExecutionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTransactionHash();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExecutedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.dac.governance.ExecutionResult.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.ExecutionResult} returns this
 */
proto.dac.governance.ExecutionResult.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.dac.governance.ExecutionResult.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.ExecutionResult} returns this
 */
proto.dac.governance.ExecutionResult.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string transaction_hash = 3;
 * @return {string}
 */
proto.dac.governance.ExecutionResult.prototype.getTransactionHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.ExecutionResult} returns this
 */
proto.dac.governance.ExecutionResult.prototype.setTransactionHash = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp executed_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.ExecutionResult.prototype.getExecutedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.ExecutionResult} returns this
*/
proto.dac.governance.ExecutionResult.prototype.setExecutedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.ExecutionResult} returns this
 */
proto.dac.governance.ExecutionResult.prototype.clearExecutedAt = function() {
  return this.setExecutedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.ExecutionResult.prototype.hasExecutedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.CastVoteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.CastVoteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.CastVoteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CastVoteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    voteOption: jspb.Message.getFieldWithDefault(msg, 3, 0),
    reasoning: jspb.Message.getFieldWithDefault(msg, 4, ""),
    votePowerOverride: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.CastVoteRequest}
 */
proto.dac.governance.CastVoteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.CastVoteRequest;
  return proto.dac.governance.CastVoteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.CastVoteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.CastVoteRequest}
 */
proto.dac.governance.CastVoteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {!proto.dac.governance.VoteOption} */ (reader.readEnum());
      msg.setVoteOption(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReasoning(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setVotePowerOverride(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.CastVoteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.CastVoteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.CastVoteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CastVoteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getVoteOption();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional int32 proposal_id = 1;
 * @return {number}
 */
proto.dac.governance.CastVoteRequest.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CastVoteRequest} returns this
 */
proto.dac.governance.CastVoteRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 user_id = 2;
 * @return {number}
 */
proto.dac.governance.CastVoteRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CastVoteRequest} returns this
 */
proto.dac.governance.CastVoteRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional VoteOption vote_option = 3;
 * @return {!proto.dac.governance.VoteOption}
 */
proto.dac.governance.CastVoteRequest.prototype.getVoteOption = function() {
  return /** @type {!proto.dac.governance.VoteOption} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.dac.governance.VoteOption} value
 * @return {!proto.dac.governance.CastVoteRequest} returns this
 */
proto.dac.governance.CastVoteRequest.prototype.setVoteOption = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string reasoning = 4;
 * @return {string}
 */
proto.dac.governance.CastVoteRequest.prototype.getReasoning = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CastVoteRequest} returns this
 */
proto.dac.governance.CastVoteRequest.prototype.setReasoning = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.CastVoteRequest} returns this
 */
proto.dac.governance.CastVoteRequest.prototype.clearReasoning = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.CastVoteRequest.prototype.hasReasoning = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string vote_power_override = 5;
 * @return {string}
 */
proto.dac.governance.CastVoteRequest.prototype.getVotePowerOverride = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CastVoteRequest} returns this
 */
proto.dac.governance.CastVoteRequest.prototype.setVotePowerOverride = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.CastVoteRequest} returns this
 */
proto.dac.governance.CastVoteRequest.prototype.clearVotePowerOverride = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.CastVoteRequest.prototype.hasVotePowerOverride = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.VoteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.VoteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.VoteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.VoteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    vote: (f = msg.getVote()) && proto.dac.governance.Vote.toObject(includeInstance, f),
    updatedProposal: (f = msg.getUpdatedProposal()) && proto.dac.governance.Proposal.toObject(includeInstance, f),
    votingPowerUsed: (f = msg.getVotingPowerUsed()) && proto.dac.governance.VotingPowerDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.VoteResponse}
 */
proto.dac.governance.VoteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.VoteResponse;
  return proto.dac.governance.VoteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.VoteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.VoteResponse}
 */
proto.dac.governance.VoteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dac.governance.Vote;
      reader.readMessage(value,proto.dac.governance.Vote.deserializeBinaryFromReader);
      msg.setVote(value);
      break;
    case 2:
      var value = new proto.dac.governance.Proposal;
      reader.readMessage(value,proto.dac.governance.Proposal.deserializeBinaryFromReader);
      msg.setUpdatedProposal(value);
      break;
    case 3:
      var value = new proto.dac.governance.VotingPowerDetails;
      reader.readMessage(value,proto.dac.governance.VotingPowerDetails.deserializeBinaryFromReader);
      msg.setVotingPowerUsed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.VoteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.VoteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.VoteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.VoteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVote();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dac.governance.Vote.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedProposal();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.dac.governance.Proposal.serializeBinaryToWriter
    );
  }
  f = message.getVotingPowerUsed();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.dac.governance.VotingPowerDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vote vote = 1;
 * @return {?proto.dac.governance.Vote}
 */
proto.dac.governance.VoteResponse.prototype.getVote = function() {
  return /** @type{?proto.dac.governance.Vote} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.Vote, 1));
};


/**
 * @param {?proto.dac.governance.Vote|undefined} value
 * @return {!proto.dac.governance.VoteResponse} returns this
*/
proto.dac.governance.VoteResponse.prototype.setVote = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.VoteResponse} returns this
 */
proto.dac.governance.VoteResponse.prototype.clearVote = function() {
  return this.setVote(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.VoteResponse.prototype.hasVote = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Proposal updated_proposal = 2;
 * @return {?proto.dac.governance.Proposal}
 */
proto.dac.governance.VoteResponse.prototype.getUpdatedProposal = function() {
  return /** @type{?proto.dac.governance.Proposal} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.Proposal, 2));
};


/**
 * @param {?proto.dac.governance.Proposal|undefined} value
 * @return {!proto.dac.governance.VoteResponse} returns this
*/
proto.dac.governance.VoteResponse.prototype.setUpdatedProposal = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.VoteResponse} returns this
 */
proto.dac.governance.VoteResponse.prototype.clearUpdatedProposal = function() {
  return this.setUpdatedProposal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.VoteResponse.prototype.hasUpdatedProposal = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional VotingPowerDetails voting_power_used = 3;
 * @return {?proto.dac.governance.VotingPowerDetails}
 */
proto.dac.governance.VoteResponse.prototype.getVotingPowerUsed = function() {
  return /** @type{?proto.dac.governance.VotingPowerDetails} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.VotingPowerDetails, 3));
};


/**
 * @param {?proto.dac.governance.VotingPowerDetails|undefined} value
 * @return {!proto.dac.governance.VoteResponse} returns this
*/
proto.dac.governance.VoteResponse.prototype.setVotingPowerUsed = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.VoteResponse} returns this
 */
proto.dac.governance.VoteResponse.prototype.clearVotingPowerUsed = function() {
  return this.setVotingPowerUsed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.VoteResponse.prototype.hasVotingPowerUsed = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.GetVotingResultsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.GetVotingResultsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.GetVotingResultsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetVotingResultsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.GetVotingResultsRequest}
 */
proto.dac.governance.GetVotingResultsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.GetVotingResultsRequest;
  return proto.dac.governance.GetVotingResultsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.GetVotingResultsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.GetVotingResultsRequest}
 */
proto.dac.governance.GetVotingResultsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.GetVotingResultsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.GetVotingResultsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.GetVotingResultsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetVotingResultsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 proposal_id = 1;
 * @return {number}
 */
proto.dac.governance.GetVotingResultsRequest.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetVotingResultsRequest} returns this
 */
proto.dac.governance.GetVotingResultsRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.VotingUpdate.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.VotingUpdate.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.VotingUpdate} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.VotingUpdate.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    votesFor: jspb.Message.getFieldWithDefault(msg, 2, 0),
    votesAgainst: jspb.Message.getFieldWithDefault(msg, 3, 0),
    votesAbstain: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalVotes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    participationRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    currentStatus: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.VotingUpdate}
 */
proto.dac.governance.VotingUpdate.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.VotingUpdate;
  return proto.dac.governance.VotingUpdate.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.VotingUpdate} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.VotingUpdate}
 */
proto.dac.governance.VotingUpdate.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVotesFor(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVotesAgainst(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVotesAbstain(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalVotes(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setParticipationRate(value);
      break;
    case 7:
      var value = /** @type {!proto.dac.governance.ProposalStatus} */ (reader.readEnum());
      msg.setCurrentStatus(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.VotingUpdate.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.VotingUpdate.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.VotingUpdate} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.VotingUpdate.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVotesFor();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getVotesAgainst();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getVotesAbstain();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTotalVotes();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getParticipationRate();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getCurrentStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 proposal_id = 1;
 * @return {number}
 */
proto.dac.governance.VotingUpdate.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.VotingUpdate} returns this
 */
proto.dac.governance.VotingUpdate.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 votes_for = 2;
 * @return {number}
 */
proto.dac.governance.VotingUpdate.prototype.getVotesFor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.VotingUpdate} returns this
 */
proto.dac.governance.VotingUpdate.prototype.setVotesFor = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 votes_against = 3;
 * @return {number}
 */
proto.dac.governance.VotingUpdate.prototype.getVotesAgainst = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.VotingUpdate} returns this
 */
proto.dac.governance.VotingUpdate.prototype.setVotesAgainst = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 votes_abstain = 4;
 * @return {number}
 */
proto.dac.governance.VotingUpdate.prototype.getVotesAbstain = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.VotingUpdate} returns this
 */
proto.dac.governance.VotingUpdate.prototype.setVotesAbstain = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 total_votes = 5;
 * @return {number}
 */
proto.dac.governance.VotingUpdate.prototype.getTotalVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.VotingUpdate} returns this
 */
proto.dac.governance.VotingUpdate.prototype.setTotalVotes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional double participation_rate = 6;
 * @return {number}
 */
proto.dac.governance.VotingUpdate.prototype.getParticipationRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.VotingUpdate} returns this
 */
proto.dac.governance.VotingUpdate.prototype.setParticipationRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional ProposalStatus current_status = 7;
 * @return {!proto.dac.governance.ProposalStatus}
 */
proto.dac.governance.VotingUpdate.prototype.getCurrentStatus = function() {
  return /** @type {!proto.dac.governance.ProposalStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.dac.governance.ProposalStatus} value
 * @return {!proto.dac.governance.VotingUpdate} returns this
 */
proto.dac.governance.VotingUpdate.prototype.setCurrentStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.VotingUpdate.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.VotingUpdate} returns this
*/
proto.dac.governance.VotingUpdate.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.VotingUpdate} returns this
 */
proto.dac.governance.VotingUpdate.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.VotingUpdate.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.GetVotingPowerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.GetVotingPowerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.GetVotingPowerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetVotingPowerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.GetVotingPowerRequest}
 */
proto.dac.governance.GetVotingPowerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.GetVotingPowerRequest;
  return proto.dac.governance.GetVotingPowerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.GetVotingPowerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.GetVotingPowerRequest}
 */
proto.dac.governance.GetVotingPowerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.GetVotingPowerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.GetVotingPowerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.GetVotingPowerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetVotingPowerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.dac.governance.GetVotingPowerRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetVotingPowerRequest} returns this
 */
proto.dac.governance.GetVotingPowerRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 proposal_id = 2;
 * @return {number}
 */
proto.dac.governance.GetVotingPowerRequest.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetVotingPowerRequest} returns this
 */
proto.dac.governance.GetVotingPowerRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.GetVotingPowerRequest} returns this
 */
proto.dac.governance.GetVotingPowerRequest.prototype.clearProposalId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.GetVotingPowerRequest.prototype.hasProposalId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 category_id = 3;
 * @return {number}
 */
proto.dac.governance.GetVotingPowerRequest.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetVotingPowerRequest} returns this
 */
proto.dac.governance.GetVotingPowerRequest.prototype.setCategoryId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.GetVotingPowerRequest} returns this
 */
proto.dac.governance.GetVotingPowerRequest.prototype.clearCategoryId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.GetVotingPowerRequest.prototype.hasCategoryId = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.VotingPowerResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.VotingPowerResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.VotingPowerResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.VotingPowerResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    votingPower: (f = msg.getVotingPower()) && proto.dac.governance.VotingPowerDetails.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.VotingPowerResponse}
 */
proto.dac.governance.VotingPowerResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.VotingPowerResponse;
  return proto.dac.governance.VotingPowerResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.VotingPowerResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.VotingPowerResponse}
 */
proto.dac.governance.VotingPowerResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dac.governance.VotingPowerDetails;
      reader.readMessage(value,proto.dac.governance.VotingPowerDetails.deserializeBinaryFromReader);
      msg.setVotingPower(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.VotingPowerResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.VotingPowerResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.VotingPowerResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.VotingPowerResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVotingPower();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dac.governance.VotingPowerDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional VotingPowerDetails voting_power = 1;
 * @return {?proto.dac.governance.VotingPowerDetails}
 */
proto.dac.governance.VotingPowerResponse.prototype.getVotingPower = function() {
  return /** @type{?proto.dac.governance.VotingPowerDetails} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.VotingPowerDetails, 1));
};


/**
 * @param {?proto.dac.governance.VotingPowerDetails|undefined} value
 * @return {!proto.dac.governance.VotingPowerResponse} returns this
*/
proto.dac.governance.VotingPowerResponse.prototype.setVotingPower = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.VotingPowerResponse} returns this
 */
proto.dac.governance.VotingPowerResponse.prototype.clearVotingPower = function() {
  return this.setVotingPower(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.VotingPowerResponse.prototype.hasVotingPower = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.VotingPowerDetails.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.VotingPowerDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.VotingPowerDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.VotingPowerDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.VotingPowerDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    basePower: jspb.Message.getFieldWithDefault(msg, 1, ""),
    delegatedPower: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalPower: jspb.Message.getFieldWithDefault(msg, 3, ""),
    delegationSourcesList: jspb.Message.toObjectList(msg.getDelegationSourcesList(),
    proto.dac.governance.DelegationNode.toObject, includeInstance),
    usesQuadraticCalculation: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    quadraticPower: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.VotingPowerDetails}
 */
proto.dac.governance.VotingPowerDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.VotingPowerDetails;
  return proto.dac.governance.VotingPowerDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.VotingPowerDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.VotingPowerDetails}
 */
proto.dac.governance.VotingPowerDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBasePower(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatedPower(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalPower(value);
      break;
    case 4:
      var value = new proto.dac.governance.DelegationNode;
      reader.readMessage(value,proto.dac.governance.DelegationNode.deserializeBinaryFromReader);
      msg.addDelegationSources(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUsesQuadraticCalculation(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuadraticPower(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.VotingPowerDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.VotingPowerDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.VotingPowerDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.VotingPowerDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBasePower();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDelegatedPower();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalPower();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDelegationSourcesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.dac.governance.DelegationNode.serializeBinaryToWriter
    );
  }
  f = message.getUsesQuadraticCalculation();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getQuadraticPower();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string base_power = 1;
 * @return {string}
 */
proto.dac.governance.VotingPowerDetails.prototype.getBasePower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.VotingPowerDetails} returns this
 */
proto.dac.governance.VotingPowerDetails.prototype.setBasePower = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string delegated_power = 2;
 * @return {string}
 */
proto.dac.governance.VotingPowerDetails.prototype.getDelegatedPower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.VotingPowerDetails} returns this
 */
proto.dac.governance.VotingPowerDetails.prototype.setDelegatedPower = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string total_power = 3;
 * @return {string}
 */
proto.dac.governance.VotingPowerDetails.prototype.getTotalPower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.VotingPowerDetails} returns this
 */
proto.dac.governance.VotingPowerDetails.prototype.setTotalPower = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated DelegationNode delegation_sources = 4;
 * @return {!Array<!proto.dac.governance.DelegationNode>}
 */
proto.dac.governance.VotingPowerDetails.prototype.getDelegationSourcesList = function() {
  return /** @type{!Array<!proto.dac.governance.DelegationNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dac.governance.DelegationNode, 4));
};


/**
 * @param {!Array<!proto.dac.governance.DelegationNode>} value
 * @return {!proto.dac.governance.VotingPowerDetails} returns this
*/
proto.dac.governance.VotingPowerDetails.prototype.setDelegationSourcesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.dac.governance.DelegationNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.DelegationNode}
 */
proto.dac.governance.VotingPowerDetails.prototype.addDelegationSources = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.dac.governance.DelegationNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.VotingPowerDetails} returns this
 */
proto.dac.governance.VotingPowerDetails.prototype.clearDelegationSourcesList = function() {
  return this.setDelegationSourcesList([]);
};


/**
 * optional bool uses_quadratic_calculation = 5;
 * @return {boolean}
 */
proto.dac.governance.VotingPowerDetails.prototype.getUsesQuadraticCalculation = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.VotingPowerDetails} returns this
 */
proto.dac.governance.VotingPowerDetails.prototype.setUsesQuadraticCalculation = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string quadratic_power = 6;
 * @return {string}
 */
proto.dac.governance.VotingPowerDetails.prototype.getQuadraticPower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.VotingPowerDetails} returns this
 */
proto.dac.governance.VotingPowerDetails.prototype.setQuadraticPower = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.CreateDelegationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.CreateDelegationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.CreateDelegationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CreateDelegationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    delegatorId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    delegateId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    scope: jspb.Message.getFieldWithDefault(msg, 3, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    proposalId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    transferable: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.CreateDelegationRequest}
 */
proto.dac.governance.CreateDelegationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.CreateDelegationRequest;
  return proto.dac.governance.CreateDelegationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.CreateDelegationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.CreateDelegationRequest}
 */
proto.dac.governance.CreateDelegationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDelegatorId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDelegateId(value);
      break;
    case 3:
      var value = /** @type {!proto.dac.governance.DelegationScope} */ (reader.readEnum());
      msg.setScope(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferable(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.CreateDelegationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.CreateDelegationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.CreateDelegationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CreateDelegationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelegatorId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getDelegateId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getScope();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getTransferable();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 delegator_id = 1;
 * @return {number}
 */
proto.dac.governance.CreateDelegationRequest.prototype.getDelegatorId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
 */
proto.dac.governance.CreateDelegationRequest.prototype.setDelegatorId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 delegate_id = 2;
 * @return {number}
 */
proto.dac.governance.CreateDelegationRequest.prototype.getDelegateId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
 */
proto.dac.governance.CreateDelegationRequest.prototype.setDelegateId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional DelegationScope scope = 3;
 * @return {!proto.dac.governance.DelegationScope}
 */
proto.dac.governance.CreateDelegationRequest.prototype.getScope = function() {
  return /** @type {!proto.dac.governance.DelegationScope} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.dac.governance.DelegationScope} value
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
 */
proto.dac.governance.CreateDelegationRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 category_id = 4;
 * @return {number}
 */
proto.dac.governance.CreateDelegationRequest.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
 */
proto.dac.governance.CreateDelegationRequest.prototype.setCategoryId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
 */
proto.dac.governance.CreateDelegationRequest.prototype.clearCategoryId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.CreateDelegationRequest.prototype.hasCategoryId = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 proposal_id = 5;
 * @return {number}
 */
proto.dac.governance.CreateDelegationRequest.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
 */
proto.dac.governance.CreateDelegationRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
 */
proto.dac.governance.CreateDelegationRequest.prototype.clearProposalId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.CreateDelegationRequest.prototype.hasProposalId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool transferable = 6;
 * @return {boolean}
 */
proto.dac.governance.CreateDelegationRequest.prototype.getTransferable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
 */
proto.dac.governance.CreateDelegationRequest.prototype.setTransferable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp expires_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.CreateDelegationRequest.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
*/
proto.dac.governance.CreateDelegationRequest.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.CreateDelegationRequest} returns this
 */
proto.dac.governance.CreateDelegationRequest.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.CreateDelegationRequest.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.UpdateDelegationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.UpdateDelegationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.UpdateDelegationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.UpdateDelegationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    transferable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.UpdateDelegationRequest}
 */
proto.dac.governance.UpdateDelegationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.UpdateDelegationRequest;
  return proto.dac.governance.UpdateDelegationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.UpdateDelegationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.UpdateDelegationRequest}
 */
proto.dac.governance.UpdateDelegationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTransferable(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.UpdateDelegationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.UpdateDelegationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.UpdateDelegationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.UpdateDelegationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.dac.governance.UpdateDelegationRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.UpdateDelegationRequest} returns this
 */
proto.dac.governance.UpdateDelegationRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool active = 2;
 * @return {boolean}
 */
proto.dac.governance.UpdateDelegationRequest.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.UpdateDelegationRequest} returns this
 */
proto.dac.governance.UpdateDelegationRequest.prototype.setActive = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.UpdateDelegationRequest} returns this
 */
proto.dac.governance.UpdateDelegationRequest.prototype.clearActive = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.UpdateDelegationRequest.prototype.hasActive = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool transferable = 3;
 * @return {boolean}
 */
proto.dac.governance.UpdateDelegationRequest.prototype.getTransferable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.UpdateDelegationRequest} returns this
 */
proto.dac.governance.UpdateDelegationRequest.prototype.setTransferable = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.UpdateDelegationRequest} returns this
 */
proto.dac.governance.UpdateDelegationRequest.prototype.clearTransferable = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.UpdateDelegationRequest.prototype.hasTransferable = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp expires_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.UpdateDelegationRequest.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.UpdateDelegationRequest} returns this
*/
proto.dac.governance.UpdateDelegationRequest.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.UpdateDelegationRequest} returns this
 */
proto.dac.governance.UpdateDelegationRequest.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.UpdateDelegationRequest.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.GetDelegationChainRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.GetDelegationChainRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.GetDelegationChainRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetDelegationChainRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.GetDelegationChainRequest}
 */
proto.dac.governance.GetDelegationChainRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.GetDelegationChainRequest;
  return proto.dac.governance.GetDelegationChainRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.GetDelegationChainRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.GetDelegationChainRequest}
 */
proto.dac.governance.GetDelegationChainRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.GetDelegationChainRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.GetDelegationChainRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.GetDelegationChainRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetDelegationChainRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 user_id = 1;
 * @return {number}
 */
proto.dac.governance.GetDelegationChainRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetDelegationChainRequest} returns this
 */
proto.dac.governance.GetDelegationChainRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 proposal_id = 2;
 * @return {number}
 */
proto.dac.governance.GetDelegationChainRequest.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetDelegationChainRequest} returns this
 */
proto.dac.governance.GetDelegationChainRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.GetDelegationChainRequest} returns this
 */
proto.dac.governance.GetDelegationChainRequest.prototype.clearProposalId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.GetDelegationChainRequest.prototype.hasProposalId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 category_id = 3;
 * @return {number}
 */
proto.dac.governance.GetDelegationChainRequest.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetDelegationChainRequest} returns this
 */
proto.dac.governance.GetDelegationChainRequest.prototype.setCategoryId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.GetDelegationChainRequest} returns this
 */
proto.dac.governance.GetDelegationChainRequest.prototype.clearCategoryId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.GetDelegationChainRequest.prototype.hasCategoryId = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.DelegationNode.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.DelegationNode.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.DelegationNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.DelegationNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.DelegationNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.dac.governance.User.toObject(includeInstance, f),
    votingPower: jspb.Message.getFieldWithDefault(msg, 2, ""),
    depth: jspb.Message.getFieldWithDefault(msg, 3, 0),
    delegatedFromList: jspb.Message.toObjectList(msg.getDelegatedFromList(),
    proto.dac.governance.DelegationNode.toObject, includeInstance),
    isActive: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.DelegationNode}
 */
proto.dac.governance.DelegationNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.DelegationNode;
  return proto.dac.governance.DelegationNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.DelegationNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.DelegationNode}
 */
proto.dac.governance.DelegationNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dac.governance.User;
      reader.readMessage(value,proto.dac.governance.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVotingPower(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepth(value);
      break;
    case 4:
      var value = new proto.dac.governance.DelegationNode;
      reader.readMessage(value,proto.dac.governance.DelegationNode.deserializeBinaryFromReader);
      msg.addDelegatedFrom(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.DelegationNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.DelegationNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.DelegationNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.DelegationNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dac.governance.User.serializeBinaryToWriter
    );
  }
  f = message.getVotingPower();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDepth();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDelegatedFromList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.dac.governance.DelegationNode.serializeBinaryToWriter
    );
  }
  f = message.getIsActive();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.dac.governance.User}
 */
proto.dac.governance.DelegationNode.prototype.getUser = function() {
  return /** @type{?proto.dac.governance.User} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.User, 1));
};


/**
 * @param {?proto.dac.governance.User|undefined} value
 * @return {!proto.dac.governance.DelegationNode} returns this
*/
proto.dac.governance.DelegationNode.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.DelegationNode} returns this
 */
proto.dac.governance.DelegationNode.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.DelegationNode.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string voting_power = 2;
 * @return {string}
 */
proto.dac.governance.DelegationNode.prototype.getVotingPower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.DelegationNode} returns this
 */
proto.dac.governance.DelegationNode.prototype.setVotingPower = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 depth = 3;
 * @return {number}
 */
proto.dac.governance.DelegationNode.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.DelegationNode} returns this
 */
proto.dac.governance.DelegationNode.prototype.setDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated DelegationNode delegated_from = 4;
 * @return {!Array<!proto.dac.governance.DelegationNode>}
 */
proto.dac.governance.DelegationNode.prototype.getDelegatedFromList = function() {
  return /** @type{!Array<!proto.dac.governance.DelegationNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dac.governance.DelegationNode, 4));
};


/**
 * @param {!Array<!proto.dac.governance.DelegationNode>} value
 * @return {!proto.dac.governance.DelegationNode} returns this
*/
proto.dac.governance.DelegationNode.prototype.setDelegatedFromList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.dac.governance.DelegationNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.DelegationNode}
 */
proto.dac.governance.DelegationNode.prototype.addDelegatedFrom = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.dac.governance.DelegationNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.DelegationNode} returns this
 */
proto.dac.governance.DelegationNode.prototype.clearDelegatedFromList = function() {
  return this.setDelegatedFromList([]);
};


/**
 * optional bool is_active = 5;
 * @return {boolean}
 */
proto.dac.governance.DelegationNode.prototype.getIsActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.DelegationNode} returns this
 */
proto.dac.governance.DelegationNode.prototype.setIsActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.GetDelegationGraphRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.GetDelegationGraphRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetDelegationGraphRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    proposalId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    categoryId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.GetDelegationGraphRequest}
 */
proto.dac.governance.GetDelegationGraphRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.GetDelegationGraphRequest;
  return proto.dac.governance.GetDelegationGraphRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.GetDelegationGraphRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.GetDelegationGraphRequest}
 */
proto.dac.governance.GetDelegationGraphRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCategoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.GetDelegationGraphRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.GetDelegationGraphRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GetDelegationGraphRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 proposal_id = 1;
 * @return {number}
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetDelegationGraphRequest} returns this
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.GetDelegationGraphRequest} returns this
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.clearProposalId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.hasProposalId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 category_id = 2;
 * @return {number}
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.getCategoryId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GetDelegationGraphRequest} returns this
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.setCategoryId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.GetDelegationGraphRequest} returns this
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.clearCategoryId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.GetDelegationGraphRequest.prototype.hasCategoryId = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.DelegationGraph.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.DelegationGraph.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.DelegationGraph.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.DelegationGraph} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.DelegationGraph.toObject = function(includeInstance, msg) {
  var f, obj = {
    edgesList: jspb.Message.toObjectList(msg.getEdgesList(),
    proto.dac.governance.DelegationEdge.toObject, includeInstance),
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.dac.governance.DelegationNode.toObject, includeInstance),
    metrics: (f = msg.getMetrics()) && proto.dac.governance.GraphMetrics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.DelegationGraph}
 */
proto.dac.governance.DelegationGraph.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.DelegationGraph;
  return proto.dac.governance.DelegationGraph.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.DelegationGraph} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.DelegationGraph}
 */
proto.dac.governance.DelegationGraph.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dac.governance.DelegationEdge;
      reader.readMessage(value,proto.dac.governance.DelegationEdge.deserializeBinaryFromReader);
      msg.addEdges(value);
      break;
    case 2:
      var value = new proto.dac.governance.DelegationNode;
      reader.readMessage(value,proto.dac.governance.DelegationNode.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    case 3:
      var value = new proto.dac.governance.GraphMetrics;
      reader.readMessage(value,proto.dac.governance.GraphMetrics.deserializeBinaryFromReader);
      msg.setMetrics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.DelegationGraph.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.DelegationGraph.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.DelegationGraph} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.DelegationGraph.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEdgesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dac.governance.DelegationEdge.serializeBinaryToWriter
    );
  }
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.dac.governance.DelegationNode.serializeBinaryToWriter
    );
  }
  f = message.getMetrics();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.dac.governance.GraphMetrics.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DelegationEdge edges = 1;
 * @return {!Array<!proto.dac.governance.DelegationEdge>}
 */
proto.dac.governance.DelegationGraph.prototype.getEdgesList = function() {
  return /** @type{!Array<!proto.dac.governance.DelegationEdge>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dac.governance.DelegationEdge, 1));
};


/**
 * @param {!Array<!proto.dac.governance.DelegationEdge>} value
 * @return {!proto.dac.governance.DelegationGraph} returns this
*/
proto.dac.governance.DelegationGraph.prototype.setEdgesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.dac.governance.DelegationEdge=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.DelegationEdge}
 */
proto.dac.governance.DelegationGraph.prototype.addEdges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dac.governance.DelegationEdge, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.DelegationGraph} returns this
 */
proto.dac.governance.DelegationGraph.prototype.clearEdgesList = function() {
  return this.setEdgesList([]);
};


/**
 * repeated DelegationNode nodes = 2;
 * @return {!Array<!proto.dac.governance.DelegationNode>}
 */
proto.dac.governance.DelegationGraph.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.dac.governance.DelegationNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dac.governance.DelegationNode, 2));
};


/**
 * @param {!Array<!proto.dac.governance.DelegationNode>} value
 * @return {!proto.dac.governance.DelegationGraph} returns this
*/
proto.dac.governance.DelegationGraph.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.dac.governance.DelegationNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.DelegationNode}
 */
proto.dac.governance.DelegationGraph.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.dac.governance.DelegationNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.DelegationGraph} returns this
 */
proto.dac.governance.DelegationGraph.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};


/**
 * optional GraphMetrics metrics = 3;
 * @return {?proto.dac.governance.GraphMetrics}
 */
proto.dac.governance.DelegationGraph.prototype.getMetrics = function() {
  return /** @type{?proto.dac.governance.GraphMetrics} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.GraphMetrics, 3));
};


/**
 * @param {?proto.dac.governance.GraphMetrics|undefined} value
 * @return {!proto.dac.governance.DelegationGraph} returns this
*/
proto.dac.governance.DelegationGraph.prototype.setMetrics = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.DelegationGraph} returns this
 */
proto.dac.governance.DelegationGraph.prototype.clearMetrics = function() {
  return this.setMetrics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.DelegationGraph.prototype.hasMetrics = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.DelegationEdge.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.DelegationEdge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.DelegationEdge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.DelegationEdge.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromUserId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    toUserId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    votingPower: jspb.Message.getFieldWithDefault(msg, 3, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.DelegationEdge}
 */
proto.dac.governance.DelegationEdge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.DelegationEdge;
  return proto.dac.governance.DelegationEdge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.DelegationEdge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.DelegationEdge}
 */
proto.dac.governance.DelegationEdge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFromUserId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setToUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVotingPower(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.DelegationEdge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.DelegationEdge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.DelegationEdge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.DelegationEdge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromUserId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getToUserId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getVotingPower();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional int32 from_user_id = 1;
 * @return {number}
 */
proto.dac.governance.DelegationEdge.prototype.getFromUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.DelegationEdge} returns this
 */
proto.dac.governance.DelegationEdge.prototype.setFromUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 to_user_id = 2;
 * @return {number}
 */
proto.dac.governance.DelegationEdge.prototype.getToUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.DelegationEdge} returns this
 */
proto.dac.governance.DelegationEdge.prototype.setToUserId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string voting_power = 3;
 * @return {string}
 */
proto.dac.governance.DelegationEdge.prototype.getVotingPower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.DelegationEdge} returns this
 */
proto.dac.governance.DelegationEdge.prototype.setVotingPower = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool active = 4;
 * @return {boolean}
 */
proto.dac.governance.DelegationEdge.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.dac.governance.DelegationEdge} returns this
 */
proto.dac.governance.DelegationEdge.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.GraphMetrics.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.GraphMetrics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.GraphMetrics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GraphMetrics.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalNodes: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalEdges: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxDepth: jspb.Message.getFieldWithDefault(msg, 3, 0),
    averageDelegationPower: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.GraphMetrics}
 */
proto.dac.governance.GraphMetrics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.GraphMetrics;
  return proto.dac.governance.GraphMetrics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.GraphMetrics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.GraphMetrics}
 */
proto.dac.governance.GraphMetrics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalNodes(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalEdges(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxDepth(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageDelegationPower(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.GraphMetrics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.GraphMetrics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.GraphMetrics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GraphMetrics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalNodes();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotalEdges();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMaxDepth();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getAverageDelegationPower();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional int32 total_nodes = 1;
 * @return {number}
 */
proto.dac.governance.GraphMetrics.prototype.getTotalNodes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GraphMetrics} returns this
 */
proto.dac.governance.GraphMetrics.prototype.setTotalNodes = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total_edges = 2;
 * @return {number}
 */
proto.dac.governance.GraphMetrics.prototype.getTotalEdges = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GraphMetrics} returns this
 */
proto.dac.governance.GraphMetrics.prototype.setTotalEdges = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 max_depth = 3;
 * @return {number}
 */
proto.dac.governance.GraphMetrics.prototype.getMaxDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GraphMetrics} returns this
 */
proto.dac.governance.GraphMetrics.prototype.setMaxDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double average_delegation_power = 4;
 * @return {number}
 */
proto.dac.governance.GraphMetrics.prototype.getAverageDelegationPower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GraphMetrics} returns this
 */
proto.dac.governance.GraphMetrics.prototype.setAverageDelegationPower = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.CreateCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.CreateCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.CreateCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CreateCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: jspb.Message.getFieldWithDefault(msg, 3, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.CreateCategoryRequest}
 */
proto.dac.governance.CreateCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.CreateCategoryRequest;
  return proto.dac.governance.CreateCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.CreateCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.CreateCategoryRequest}
 */
proto.dac.governance.CreateCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.CreateCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.CreateCategoryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.CreateCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CreateCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dac.governance.CreateCategoryRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateCategoryRequest} returns this
 */
proto.dac.governance.CreateCategoryRequest.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.dac.governance.CreateCategoryRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateCategoryRequest} returns this
 */
proto.dac.governance.CreateCategoryRequest.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string color = 3;
 * @return {string}
 */
proto.dac.governance.CreateCategoryRequest.prototype.getColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateCategoryRequest} returns this
 */
proto.dac.governance.CreateCategoryRequest.prototype.setColor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icon = 4;
 * @return {string}
 */
proto.dac.governance.CreateCategoryRequest.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.CreateCategoryRequest} returns this
 */
proto.dac.governance.CreateCategoryRequest.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.CategoriesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.CategoriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.CategoriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.CategoriesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CategoriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    proto.dac.governance.GovernanceCategory.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.CategoriesResponse}
 */
proto.dac.governance.CategoriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.CategoriesResponse;
  return proto.dac.governance.CategoriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.CategoriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.CategoriesResponse}
 */
proto.dac.governance.CategoriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dac.governance.GovernanceCategory;
      reader.readMessage(value,proto.dac.governance.GovernanceCategory.deserializeBinaryFromReader);
      msg.addCategories(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.CategoriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.CategoriesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.CategoriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CategoriesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dac.governance.GovernanceCategory.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GovernanceCategory categories = 1;
 * @return {!Array<!proto.dac.governance.GovernanceCategory>}
 */
proto.dac.governance.CategoriesResponse.prototype.getCategoriesList = function() {
  return /** @type{!Array<!proto.dac.governance.GovernanceCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dac.governance.GovernanceCategory, 1));
};


/**
 * @param {!Array<!proto.dac.governance.GovernanceCategory>} value
 * @return {!proto.dac.governance.CategoriesResponse} returns this
*/
proto.dac.governance.CategoriesResponse.prototype.setCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.dac.governance.GovernanceCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.GovernanceCategory}
 */
proto.dac.governance.CategoriesResponse.prototype.addCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.dac.governance.GovernanceCategory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.CategoriesResponse} returns this
 */
proto.dac.governance.CategoriesResponse.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.GovernanceStats.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.GovernanceStats.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.GovernanceStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.GovernanceStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GovernanceStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalProposals: jspb.Message.getFieldWithDefault(msg, 1, 0),
    activeProposals: jspb.Message.getFieldWithDefault(msg, 2, 0),
    executedProposals: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalVotes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalMembers: jspb.Message.getFieldWithDefault(msg, 5, 0),
    activeDelegations: jspb.Message.getFieldWithDefault(msg, 6, 0),
    averageParticipationRate: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    totalVotingPower: jspb.Message.getFieldWithDefault(msg, 8, ""),
    tokenPrice: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    categoryStatsList: jspb.Message.toObjectList(msg.getCategoryStatsList(),
    proto.dac.governance.CategoryStats.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.GovernanceStats}
 */
proto.dac.governance.GovernanceStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.GovernanceStats;
  return proto.dac.governance.GovernanceStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.GovernanceStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.GovernanceStats}
 */
proto.dac.governance.GovernanceStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalProposals(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setActiveProposals(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExecutedProposals(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalVotes(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalMembers(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setActiveDelegations(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageParticipationRate(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalVotingPower(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTokenPrice(value);
      break;
    case 10:
      var value = new proto.dac.governance.CategoryStats;
      reader.readMessage(value,proto.dac.governance.CategoryStats.deserializeBinaryFromReader);
      msg.addCategoryStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.GovernanceStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.GovernanceStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.GovernanceStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GovernanceStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotalProposals();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getActiveProposals();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getExecutedProposals();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTotalVotes();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getTotalMembers();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getActiveDelegations();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getAverageParticipationRate();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getTotalVotingPower();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTokenPrice();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getCategoryStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.dac.governance.CategoryStats.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 total_proposals = 1;
 * @return {number}
 */
proto.dac.governance.GovernanceStats.prototype.getTotalProposals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.setTotalProposals = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 active_proposals = 2;
 * @return {number}
 */
proto.dac.governance.GovernanceStats.prototype.getActiveProposals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.setActiveProposals = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 executed_proposals = 3;
 * @return {number}
 */
proto.dac.governance.GovernanceStats.prototype.getExecutedProposals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.setExecutedProposals = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 total_votes = 4;
 * @return {number}
 */
proto.dac.governance.GovernanceStats.prototype.getTotalVotes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.setTotalVotes = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 total_members = 5;
 * @return {number}
 */
proto.dac.governance.GovernanceStats.prototype.getTotalMembers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.setTotalMembers = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 active_delegations = 6;
 * @return {number}
 */
proto.dac.governance.GovernanceStats.prototype.getActiveDelegations = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.setActiveDelegations = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional double average_participation_rate = 7;
 * @return {number}
 */
proto.dac.governance.GovernanceStats.prototype.getAverageParticipationRate = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.setAverageParticipationRate = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string total_voting_power = 8;
 * @return {string}
 */
proto.dac.governance.GovernanceStats.prototype.getTotalVotingPower = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.setTotalVotingPower = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional double token_price = 9;
 * @return {number}
 */
proto.dac.governance.GovernanceStats.prototype.getTokenPrice = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.setTokenPrice = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * repeated CategoryStats category_stats = 10;
 * @return {!Array<!proto.dac.governance.CategoryStats>}
 */
proto.dac.governance.GovernanceStats.prototype.getCategoryStatsList = function() {
  return /** @type{!Array<!proto.dac.governance.CategoryStats>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dac.governance.CategoryStats, 10));
};


/**
 * @param {!Array<!proto.dac.governance.CategoryStats>} value
 * @return {!proto.dac.governance.GovernanceStats} returns this
*/
proto.dac.governance.GovernanceStats.prototype.setCategoryStatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.dac.governance.CategoryStats=} opt_value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.CategoryStats}
 */
proto.dac.governance.GovernanceStats.prototype.addCategoryStats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.dac.governance.CategoryStats, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.GovernanceStats} returns this
 */
proto.dac.governance.GovernanceStats.prototype.clearCategoryStatsList = function() {
  return this.setCategoryStatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.CategoryStats.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.CategoryStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.CategoryStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CategoryStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    category: (f = msg.getCategory()) && proto.dac.governance.GovernanceCategory.toObject(includeInstance, f),
    proposalCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    voteCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    averageParticipation: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.CategoryStats}
 */
proto.dac.governance.CategoryStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.CategoryStats;
  return proto.dac.governance.CategoryStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.CategoryStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.CategoryStats}
 */
proto.dac.governance.CategoryStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dac.governance.GovernanceCategory;
      reader.readMessage(value,proto.dac.governance.GovernanceCategory.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setProposalCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVoteCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageParticipation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.CategoryStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.CategoryStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.CategoryStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.CategoryStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.dac.governance.GovernanceCategory.serializeBinaryToWriter
    );
  }
  f = message.getProposalCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getVoteCount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAverageParticipation();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional GovernanceCategory category = 1;
 * @return {?proto.dac.governance.GovernanceCategory}
 */
proto.dac.governance.CategoryStats.prototype.getCategory = function() {
  return /** @type{?proto.dac.governance.GovernanceCategory} */ (
    jspb.Message.getWrapperField(this, proto.dac.governance.GovernanceCategory, 1));
};


/**
 * @param {?proto.dac.governance.GovernanceCategory|undefined} value
 * @return {!proto.dac.governance.CategoryStats} returns this
*/
proto.dac.governance.CategoryStats.prototype.setCategory = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.CategoryStats} returns this
 */
proto.dac.governance.CategoryStats.prototype.clearCategory = function() {
  return this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.CategoryStats.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 proposal_count = 2;
 * @return {number}
 */
proto.dac.governance.CategoryStats.prototype.getProposalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CategoryStats} returns this
 */
proto.dac.governance.CategoryStats.prototype.setProposalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 vote_count = 3;
 * @return {number}
 */
proto.dac.governance.CategoryStats.prototype.getVoteCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CategoryStats} returns this
 */
proto.dac.governance.CategoryStats.prototype.setVoteCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double average_participation = 4;
 * @return {number}
 */
proto.dac.governance.CategoryStats.prototype.getAverageParticipation = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.CategoryStats} returns this
 */
proto.dac.governance.CategoryStats.prototype.setAverageParticipation = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dac.governance.StreamEventsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.StreamEventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.StreamEventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.StreamEventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.StreamEventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventTypesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    userId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    proposalId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.StreamEventsRequest}
 */
proto.dac.governance.StreamEventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.StreamEventsRequest;
  return proto.dac.governance.StreamEventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.StreamEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.StreamEventsRequest}
 */
proto.dac.governance.StreamEventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<!proto.dac.governance.EventType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addEventTypes(values[i]);
      }
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.StreamEventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.StreamEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.StreamEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.StreamEventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated EventType event_types = 1;
 * @return {!Array<!proto.dac.governance.EventType>}
 */
proto.dac.governance.StreamEventsRequest.prototype.getEventTypesList = function() {
  return /** @type {!Array<!proto.dac.governance.EventType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<!proto.dac.governance.EventType>} value
 * @return {!proto.dac.governance.StreamEventsRequest} returns this
 */
proto.dac.governance.StreamEventsRequest.prototype.setEventTypesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.dac.governance.EventType} value
 * @param {number=} opt_index
 * @return {!proto.dac.governance.StreamEventsRequest} returns this
 */
proto.dac.governance.StreamEventsRequest.prototype.addEventTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.dac.governance.StreamEventsRequest} returns this
 */
proto.dac.governance.StreamEventsRequest.prototype.clearEventTypesList = function() {
  return this.setEventTypesList([]);
};


/**
 * optional int32 user_id = 2;
 * @return {number}
 */
proto.dac.governance.StreamEventsRequest.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.StreamEventsRequest} returns this
 */
proto.dac.governance.StreamEventsRequest.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.StreamEventsRequest} returns this
 */
proto.dac.governance.StreamEventsRequest.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.StreamEventsRequest.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 proposal_id = 3;
 * @return {number}
 */
proto.dac.governance.StreamEventsRequest.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.StreamEventsRequest} returns this
 */
proto.dac.governance.StreamEventsRequest.prototype.setProposalId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.StreamEventsRequest} returns this
 */
proto.dac.governance.StreamEventsRequest.prototype.clearProposalId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.StreamEventsRequest.prototype.hasProposalId = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dac.governance.GovernanceEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.dac.governance.GovernanceEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dac.governance.GovernanceEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GovernanceEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proposalId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    data: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dac.governance.GovernanceEvent}
 */
proto.dac.governance.GovernanceEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dac.governance.GovernanceEvent;
  return proto.dac.governance.GovernanceEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dac.governance.GovernanceEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dac.governance.GovernanceEvent}
 */
proto.dac.governance.GovernanceEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.dac.governance.EventType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProposalId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setUserId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dac.governance.GovernanceEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dac.governance.GovernanceEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dac.governance.GovernanceEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dac.governance.GovernanceEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional EventType type = 1;
 * @return {!proto.dac.governance.EventType}
 */
proto.dac.governance.GovernanceEvent.prototype.getType = function() {
  return /** @type {!proto.dac.governance.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.dac.governance.EventType} value
 * @return {!proto.dac.governance.GovernanceEvent} returns this
 */
proto.dac.governance.GovernanceEvent.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 proposal_id = 2;
 * @return {number}
 */
proto.dac.governance.GovernanceEvent.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceEvent} returns this
 */
proto.dac.governance.GovernanceEvent.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 user_id = 3;
 * @return {number}
 */
proto.dac.governance.GovernanceEvent.prototype.getUserId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.dac.governance.GovernanceEvent} returns this
 */
proto.dac.governance.GovernanceEvent.prototype.setUserId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.dac.governance.GovernanceEvent} returns this
 */
proto.dac.governance.GovernanceEvent.prototype.clearUserId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.GovernanceEvent.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string data = 4;
 * @return {string}
 */
proto.dac.governance.GovernanceEvent.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.dac.governance.GovernanceEvent} returns this
 */
proto.dac.governance.GovernanceEvent.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.dac.governance.GovernanceEvent.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.dac.governance.GovernanceEvent} returns this
*/
proto.dac.governance.GovernanceEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.dac.governance.GovernanceEvent} returns this
 */
proto.dac.governance.GovernanceEvent.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.dac.governance.GovernanceEvent.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * @enum {number}
 */
proto.dac.governance.ProposalType = {
  PROPOSAL_TYPE_UNSPECIFIED: 0,
  PROPOSAL_TYPE_STANDARD: 1,
  PROPOSAL_TYPE_CONSTITUTIONAL: 2,
  PROPOSAL_TYPE_EMERGENCY: 3,
  PROPOSAL_TYPE_SPENDING: 4,
  PROPOSAL_TYPE_TECHNICAL: 5
};

/**
 * @enum {number}
 */
proto.dac.governance.ProposalStatus = {
  PROPOSAL_STATUS_UNSPECIFIED: 0,
  PROPOSAL_STATUS_DRAFT: 1,
  PROPOSAL_STATUS_ACTIVE: 2,
  PROPOSAL_STATUS_PASSED: 3,
  PROPOSAL_STATUS_FAILED: 4,
  PROPOSAL_STATUS_EXECUTED: 5,
  PROPOSAL_STATUS_CANCELLED: 6
};

/**
 * @enum {number}
 */
proto.dac.governance.VoteOption = {
  VOTE_OPTION_UNSPECIFIED: 0,
  VOTE_OPTION_FOR: 1,
  VOTE_OPTION_AGAINST: 2,
  VOTE_OPTION_ABSTAIN: 3
};

/**
 * @enum {number}
 */
proto.dac.governance.DelegationScope = {
  DELEGATION_SCOPE_UNSPECIFIED: 0,
  DELEGATION_SCOPE_GLOBAL: 1,
  DELEGATION_SCOPE_CATEGORY: 2,
  DELEGATION_SCOPE_PROPOSAL: 3
};

/**
 * @enum {number}
 */
proto.dac.governance.EventType = {
  EVENT_TYPE_UNSPECIFIED: 0,
  EVENT_TYPE_PROPOSAL_CREATED: 1,
  EVENT_TYPE_PROPOSAL_UPDATED: 2,
  EVENT_TYPE_VOTE_CAST: 3,
  EVENT_TYPE_DELEGATION_CREATED: 4,
  EVENT_TYPE_DELEGATION_UPDATED: 5,
  EVENT_TYPE_PROPOSAL_EXECUTED: 6
};

goog.object.extend(exports, proto.dac.governance);
