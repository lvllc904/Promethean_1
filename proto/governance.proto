syntax = "proto3";

package dac.governance;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// Governance Service Definition
service GovernanceService {
  // Proposal Management
  rpc CreateProposal(CreateProposalRequest) returns (Proposal);
  rpc GetProposal(GetProposalRequest) returns (Proposal);
  rpc ListProposals(ListProposalsRequest) returns (ListProposalsResponse);
  rpc UpdateProposal(UpdateProposalRequest) returns (Proposal);
  rpc ExecuteProposal(ExecuteProposalRequest) returns (ExecutionResult);
  
  // Voting Operations
  rpc CastVote(CastVoteRequest) returns (VoteResponse);
  rpc GetVotingResults(GetVotingResultsRequest) returns (stream VotingUpdate);
  rpc GetUserVotingPower(GetVotingPowerRequest) returns (VotingPowerResponse);
  
  // Delegation Management
  rpc CreateDelegation(CreateDelegationRequest) returns (Delegation);
  rpc UpdateDelegation(UpdateDelegationRequest) returns (Delegation);
  rpc GetDelegationChain(GetDelegationChainRequest) returns (stream DelegationNode);
  rpc GetDelegationGraph(GetDelegationGraphRequest) returns (DelegationGraph);
  
  // Governance Categories
  rpc ListGovernanceCategories(google.protobuf.Empty) returns (CategoriesResponse);
  rpc CreateGovernanceCategory(CreateCategoryRequest) returns (GovernanceCategory);
  
  // Statistics and Analytics
  rpc GetGovernanceStats(google.protobuf.Empty) returns (GovernanceStats);
  rpc StreamGovernanceEvents(StreamEventsRequest) returns (stream GovernanceEvent);
}

// Core Data Types
message Proposal {
  int32 id = 1;
  string title = 2;
  string description = 3;
  string content = 4;
  ProposalType type = 5;
  ProposalStatus status = 6;
  int32 category_id = 7;
  int32 created_by = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp voting_starts_at = 10;
  google.protobuf.Timestamp voting_ends_at = 11;
  string voting_threshold = 12;
  string quorum_required = 13;
  int64 votes_for = 14;
  int64 votes_against = 15;
  int64 votes_abstain = 16;
  repeated string tags = 17;
  string metadata = 18;
  bool uses_quadratic_voting = 19;
  GovernanceCategory category = 20;
  User creator = 21;
}

message Vote {
  int32 id = 1;
  int32 proposal_id = 2;
  int32 user_id = 3;
  VoteOption vote_option = 4;
  string vote_power = 5;
  string reasoning = 6;
  google.protobuf.Timestamp created_at = 7;
  bool is_delegated = 8;
  int32 delegated_from = 9;
}

message Delegation {
  int32 id = 1;
  int32 delegator_id = 2;
  int32 delegate_id = 3;
  DelegationScope scope = 4;
  optional int32 category_id = 5;
  optional int32 proposal_id = 6;
  bool active = 7;
  bool transferable = 8;
  google.protobuf.Timestamp created_at = 9;
  optional google.protobuf.Timestamp expires_at = 10;
  User delegator = 11;
  User delegate = 12;
}

message GovernanceCategory {
  int32 id = 1;
  string name = 2;
  string description = 3;
  string color = 4;
  string icon = 5;
  bool active = 6;
  int32 proposal_count = 7;
}

message User {
  int32 id = 1;
  string username = 2;
  string name = 3;
  string email = 4;
  string membership_tier = 5;
  string wallet_address = 6;
  string dac_token_balance = 7;
  string prom_token_balance = 8;
  string avatar_url = 9;
  int32 reputation_score = 10;
}

// Request/Response Messages
message CreateProposalRequest {
  string title = 1;
  string description = 2;
  string content = 3;
  ProposalType type = 4;
  int32 category_id = 5;
  int32 created_by = 6;
  google.protobuf.Timestamp voting_starts_at = 7;
  google.protobuf.Timestamp voting_ends_at = 8;
  string voting_threshold = 9;
  string quorum_required = 10;
  repeated string tags = 11;
  string metadata = 12;
  bool uses_quadratic_voting = 13;
}

message GetProposalRequest {
  int32 id = 1;
}

message ListProposalsRequest {
  optional string status = 1;
  optional int32 category_id = 2;
  optional int32 created_by = 3;
  int32 page = 4;
  int32 limit = 5;
  string sort_by = 6;
  string sort_order = 7;
}

message ListProposalsResponse {
  repeated Proposal proposals = 1;
  int32 total_count = 2;
  int32 page = 3;
  int32 limit = 4;
  bool has_next = 5;
}

message UpdateProposalRequest {
  int32 id = 1;
  optional string title = 2;
  optional string description = 3;
  optional string content = 4;
  optional ProposalStatus status = 5;
  repeated string tags = 6;
  optional string metadata = 7;
}

message ExecuteProposalRequest {
  int32 id = 1;
  int32 executed_by = 2;
}

message ExecutionResult {
  bool success = 1;
  string message = 2;
  string transaction_hash = 3;
  google.protobuf.Timestamp executed_at = 4;
}

message CastVoteRequest {
  int32 proposal_id = 1;
  int32 user_id = 2;
  VoteOption vote_option = 3;
  optional string reasoning = 4;
  optional string vote_power_override = 5;
}

message VoteResponse {
  Vote vote = 1;
  Proposal updated_proposal = 2;
  VotingPowerDetails voting_power_used = 3;
}

message GetVotingResultsRequest {
  int32 proposal_id = 1;
}

message VotingUpdate {
  int32 proposal_id = 1;
  int64 votes_for = 2;
  int64 votes_against = 3;
  int64 votes_abstain = 4;
  int64 total_votes = 5;
  double participation_rate = 6;
  ProposalStatus current_status = 7;
  google.protobuf.Timestamp timestamp = 8;
}

message GetVotingPowerRequest {
  int32 user_id = 1;
  optional int32 proposal_id = 2;
  optional int32 category_id = 3;
}

message VotingPowerResponse {
  VotingPowerDetails voting_power = 1;
}

message VotingPowerDetails {
  string base_power = 1;
  string delegated_power = 2;
  string total_power = 3;
  repeated DelegationNode delegation_sources = 4;
  bool uses_quadratic_calculation = 5;
  string quadratic_power = 6;
}

message CreateDelegationRequest {
  int32 delegator_id = 1;
  int32 delegate_id = 2;
  DelegationScope scope = 3;
  optional int32 category_id = 4;
  optional int32 proposal_id = 5;
  bool transferable = 6;
  optional google.protobuf.Timestamp expires_at = 7;
}

message UpdateDelegationRequest {
  int32 id = 1;
  optional bool active = 2;
  optional bool transferable = 3;
  optional google.protobuf.Timestamp expires_at = 4;
}

message GetDelegationChainRequest {
  int32 user_id = 1;
  optional int32 proposal_id = 2;
  optional int32 category_id = 3;
}

message DelegationNode {
  User user = 1;
  string voting_power = 2;
  int32 depth = 3;
  repeated DelegationNode delegated_from = 4;
  bool is_active = 5;
}

message GetDelegationGraphRequest {
  optional int32 proposal_id = 1;
  optional int32 category_id = 2;
}

message DelegationGraph {
  repeated DelegationEdge edges = 1;
  repeated DelegationNode nodes = 2;
  GraphMetrics metrics = 3;
}

message DelegationEdge {
  int32 from_user_id = 1;
  int32 to_user_id = 2;
  string voting_power = 3;
  bool active = 4;
}

message GraphMetrics {
  int32 total_nodes = 1;
  int32 total_edges = 2;
  int32 max_depth = 3;
  double average_delegation_power = 4;
}

message CreateCategoryRequest {
  string name = 1;
  string description = 2;
  string color = 3;
  string icon = 4;
}

message CategoriesResponse {
  repeated GovernanceCategory categories = 1;
}

message GovernanceStats {
  int64 total_proposals = 1;
  int64 active_proposals = 2;
  int64 executed_proposals = 3;
  int64 total_votes = 4;
  int64 total_members = 5;
  int64 active_delegations = 6;
  double average_participation_rate = 7;
  string total_voting_power = 8;
  double token_price = 9;
  repeated CategoryStats category_stats = 10;
}

message CategoryStats {
  GovernanceCategory category = 1;
  int64 proposal_count = 2;
  int64 vote_count = 3;
  double average_participation = 4;
}

message StreamEventsRequest {
  repeated EventType event_types = 1;
  optional int32 user_id = 2;
  optional int32 proposal_id = 3;
}

message GovernanceEvent {
  EventType type = 1;
  int32 proposal_id = 2;
  optional int32 user_id = 3;
  string data = 4;
  google.protobuf.Timestamp timestamp = 5;
}

// Enums
enum ProposalType {
  PROPOSAL_TYPE_UNSPECIFIED = 0;
  PROPOSAL_TYPE_STANDARD = 1;
  PROPOSAL_TYPE_CONSTITUTIONAL = 2;
  PROPOSAL_TYPE_EMERGENCY = 3;
  PROPOSAL_TYPE_SPENDING = 4;
  PROPOSAL_TYPE_TECHNICAL = 5;
}

enum ProposalStatus {
  PROPOSAL_STATUS_UNSPECIFIED = 0;
  PROPOSAL_STATUS_DRAFT = 1;
  PROPOSAL_STATUS_ACTIVE = 2;
  PROPOSAL_STATUS_PASSED = 3;
  PROPOSAL_STATUS_FAILED = 4;
  PROPOSAL_STATUS_EXECUTED = 5;
  PROPOSAL_STATUS_CANCELLED = 6;
}

enum VoteOption {
  VOTE_OPTION_UNSPECIFIED = 0;
  VOTE_OPTION_FOR = 1;
  VOTE_OPTION_AGAINST = 2;
  VOTE_OPTION_ABSTAIN = 3;
}

enum DelegationScope {
  DELEGATION_SCOPE_UNSPECIFIED = 0;
  DELEGATION_SCOPE_GLOBAL = 1;
  DELEGATION_SCOPE_CATEGORY = 2;
  DELEGATION_SCOPE_PROPOSAL = 3;
}

enum EventType {
  EVENT_TYPE_UNSPECIFIED = 0;
  EVENT_TYPE_PROPOSAL_CREATED = 1;
  EVENT_TYPE_PROPOSAL_UPDATED = 2;
  EVENT_TYPE_VOTE_CAST = 3;
  EVENT_TYPE_DELEGATION_CREATED = 4;
  EVENT_TYPE_DELEGATION_UPDATED = 5;
  EVENT_TYPE_PROPOSAL_EXECUTED = 6;
}